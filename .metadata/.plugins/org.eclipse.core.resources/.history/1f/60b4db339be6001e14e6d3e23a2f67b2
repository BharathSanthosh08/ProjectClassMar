package in.Amazon;

iimport java.util.LinkedList;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.TimeUnit;

import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.openqa.selenium.By;
	import org.openqa.selenium.WebDriver;
	import org.openqa.selenium.WebElement;
	import org.openqa.selenium.edge.EdgeDriver;
	import org.openqa.selenium.edge.EdgeOptions;
	import org.openqa.selenium.interactions.Actions;
import com.google.common.annotations.VisibleForTesting;

	import io.github.bonigarcia.wdm.WebDriverManager;
	

	public class 	Electronics {
		
		static WebDriver driver;
		static Actions action;
		
		
		@org.testng.annotations.Test(priority = 1)
		public void Launch_Browser() {
		WebDriverManager.edgedriver().setup();
		EdgeOptions options = new EdgeOptions();
		options.addArguments("start-maximized");
		driver = new EdgeDriver(options);
		driver.get("https://www.amazon.in");
		driver.manage().timeouts().implicitlyWait (10, TimeUnit.SECONDS);
		action = new Actions (driver);
		}
		
		@org.testng.annotations.Test(priority = 2)
		public void Click_on_Electronics() {
			driver.manage().timeouts().implicitlyWait (10, TimeUnit.SECONDS);
			driver.findElement(By.xpath("//a[contains(text(),'Electronics')]")).click();
		
			
		}
		
		@org.testng.annotations.Test(priority = 3)
		public void MouseHover() {
		WebElement Camera = driver.findElement(By.xpath("(//span[contains(text(),'Cameras')])[1]"));
		action.moveToElement (Camera).perform();
		} 
		@org.testng.annotations.Test(priority = 4)
		public void Validate_Listed_Options() {
		List<WebElement> listedOptions= driver.findElements (By.xpath("//a[text()='Camera Accessories']"));
		List<String> list = new LinkedList<>();
		list.add("Camera cases & Bags"); list.add("Tripods & Monopods"); list.add("Projectors"); list.add("Batteries");
		list.add("Photo studio & lighting"); list.add("Flash accessories");list.add("Binocular & Telescopes");
		if(list.size()==listedOptions.size()) {
		for (int i = 0; i < listedOptions.size(); i++) {
		String text = listedOptions.get(i).getText();
		String expected = list.get(i);
		if (text.equals (expected)) {
		System.out.println("Pass");
		
		 } else {
         System.out.println("Fail");

		}
		}
		}
		}
		@org.testng.annotations.Test(priority = 5)
		public void Click_on_Projectors() {
		WebElement Projectors = driver.findElement(By.xpath("//a[text()='Projectors']"));
		Projectors.click();
		}
		@org.testng.annotations.Test(priority = 6)
		public void Validate_Listed_Products() {
		List<WebElement> listedProducts = driver.findElements(By.xpath("//a[contains(@style,'background:transparent')]"));
		for (int i=0; i < listedProducts.size(); i++) {
		String text = listedProducts.get(i).getText();
		if(text.contains ("Accessories")||text.contains ("accessories")) {
		System.out.println("Contains " + text);
		}
		else {
		System.out.println("Does not Contains" + text);
		}
		}
		}


}
}
